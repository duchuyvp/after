{
  "components": {
    "schemas": {
      "AccountModificationLogsFilterResponse": {
        "properties": {
          "content": {
            "description": "List of account modification logs",
            "items": {
              "$ref": "#/components/schemas/AccountModificationLogs"
            },
            "type": "array"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "totalElements": {
            "description": "Total number of elements",
            "type": "integer"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AccountModificationLogs": {
        "properties": {
          "account_email": {
            "description": "Account email",
            "type": "string"
          },
          "account_id": {
            "description": "Account id",
            "type": "integer"
          },
          "account_name": {
            "description": "Account name",
            "type": "string"
          },
          "created_by": {
            "description": "Created by",
            "type": "integer"
          },
          "created_date": {
            "description": "Created date",
            "format": "date-time",
            "type": "string"
          },
          "creator": {
            "description": "Creator",
            "type": "string"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "token_id": {
            "description": "Token id",
            "type": "integer"
          },
          "token_label": {
            "description": "Token label",
            "type": "string"
          },
          "type_modifiy": {
            "description": "Type of modification",
            "type": "string"
          },
          "type_target": {
            "description": "Type of target",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddNestedTokenPlatform": {
        "properties": {
          "platforms": {
            "description": "List of platforms to add, must not be empty",
            "items": {
              "$ref": "#/components/schemas/Addtokenplatform"
            },
            "type": "array"
          }
        },
        "required": [
          "platforms"
        ],
        "type": "object"
      },
      "AddNestedUserPlatform": {
        "properties": {
          "platforms": {
            "description": "list[Platform] to add",
            "items": {
              "$ref": "#/components/schemas/AddUserPlatform"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AddNews": {
        "properties": {
          "active_at": {
            "description": "News active date",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "content": {
            "description": "News content",
            "example": "News content",
            "type": "string"
          },
          "image_url": {
            "description": "News image url",
            "example": "https://example.com/image.png",
            "type": "string"
          },
          "title": {
            "description": "News title",
            "example": "News title",
            "type": "string"
          },
          "type": {
            "description": "News type (normal, system_maintenance)",
            "example": "normal",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddUserCredit": {
        "properties": {
          "credits": {
            "description": "list[Credit] to add",
            "items": {
              "$ref": "#/components/schemas/Credit"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AddUserPlatform": {
        "properties": {
          "max_credit": {
            "description": "Max credit",
            "example": 10,
            "type": "integer"
          },
          "max_duration": {
            "description": "Max duration in seconds",
            "example": 3600,
            "type": "integer"
          },
          "platform_id": {
            "description": "Platform id",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Addcompany": {
        "properties": {
          "address": {
            "description": "Company address",
            "example": "Company address",
            "type": "string"
          },
          "billing_email": {
            "description": "Company billing email",
            "example": "billing@email.com",
            "format": "email",
            "type": "string"
          },
          "contact_email": {
            "description": "Company contact email",
            "example": "company@company.com",
            "format": "email",
            "type": "string"
          },
          "name": {
            "description": "Company name",
            "example": "Company name",
            "type": "string"
          },
          "tax_number": {
            "description": "Company tax number",
            "example": "Company tax number",
            "type": "string"
          },
          "tel": {
            "description": "Company tel",
            "example": "Company tel",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Addcompanyplatform": {
        "properties": {
          "platform_ids": {
            "items": {
              "description": "Platform id",
              "example": 1,
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Addcompanyresponse": {
        "properties": {
          "id": {
            "description": "Company id",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Addsystemnotification": {
        "properties": {
          "active_at": {
            "description": "Active at",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "apply_for": {
            "description": "Apply for",
            "example": "WEBADMIN",
            "type": "string"
          },
          "content": {
            "description": "Notification content",
            "example": "Notification content",
            "type": "string"
          },
          "expired_at": {
            "description": "Expired at",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "title": {
            "description": "Notification title",
            "example": "Notification title",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddsystemnotificationResponse": {
        "properties": {
          "id": {
            "description": "ID",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Addtagtoobject": {
        "properties": {
          "object_ids": {
            "description": "One or many object ids to add tag"
          },
          "tag_id": {
            "description": "One or many tag ids to add to object"
          }
        },
        "type": "object"
      },
      "Addtokenplatform": {
        "properties": {
          "max_credit": {
            "description": "Max credit",
            "example": 10,
            "type": "integer"
          },
          "max_duration": {
            "description": "Max duration in seconds",
            "example": 3600,
            "type": "integer"
          },
          "platform_id": {
            "description": "Platform id",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdminCreateUser": {
        "properties": {
          "company_id": {
            "description": "Company ID",
            "type": "integer"
          },
          "email": {
            "description": "Email",
            "example": "john@doe.com",
            "format": "email",
            "type": "string"
          },
          "language": {
            "description": "Language",
            "type": "string"
          },
          "monitoring_user": {
            "description": "Is monitoring user",
            "example": true,
            "type": "boolean"
          },
          "password": {
            "description": "Password",
            "example": "password",
            "type": "string"
          },
          "platform_ids": {
            "description": "Platform IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "role_id": {
            "description": "Role ID",
            "type": "integer"
          },
          "send_invitation": {
            "description": "Send invitation",
            "example": true,
            "type": "boolean"
          },
          "tags": {
            "description": "Tags",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array"
          },
          "username": {
            "description": "Username",
            "example": "john",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdminValidateuser": {
        "properties": {
          "email": {
            "description": "Email",
            "example": "john@doe.com",
            "format": "email",
            "type": "string"
          },
          "id": {
            "description": "User ID",
            "example": 1,
            "type": "integer"
          },
          "username": {
            "description": "Username",
            "example": "john",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Adminfinishjob": {
        "properties": {
          "duration": {
            "description": "Duration",
            "example": 1,
            "type": "integer"
          },
          "failure_code": {
            "description": "Failure Code",
            "example": "failure code",
            "type": "string"
          },
          "process_id": {
            "description": "Process ID",
            "example": "process id",
            "type": "string"
          },
          "progress_stage": {
            "description": "Progress Stage",
            "example": "progress stage",
            "type": "string"
          },
          "result": {
            "description": "Result as JSON",
            "example": {
              "key": "value"
            },
            "type": "object"
          },
          "status": {
            "description": "Status",
            "example": "pending",
            "type": "string"
          },
          "status_message": {
            "description": "Status Message",
            "example": "status message",
            "type": "string"
          },
          "worker_id": {
            "description": "Worker ID",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Admingetlatestjobresponse": {
        "properties": {
          "command": {
            "description": "Command",
            "example": "command",
            "type": "string"
          },
          "company_id": {
            "description": "Company ID",
            "example": 1,
            "type": "integer"
          },
          "company_name": {
            "description": "Company Name",
            "example": "Company Name",
            "type": "string"
          },
          "created_date": {
            "description": "Created Date",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "duration": {
            "description": "Duration",
            "example": 1,
            "type": "integer"
          },
          "email": {
            "description": "Email",
            "example": "key@value.label",
            "format": "email",
            "type": "string"
          },
          "failure_code": {
            "description": "Failure Code",
            "example": "failure code",
            "type": "string"
          },
          "is_rerun": {
            "description": "Is Rerun",
            "example": true,
            "type": "boolean"
          },
          "job_id": {
            "description": "Job ID",
            "example": "5f8b9b0c-4b1c-4b1c-9b0c-4b1c4b1c4b1c",
            "type": "string"
          },
          "job_name": {
            "description": "Job Name",
            "example": "Job Name",
            "type": "string"
          },
          "job_progress": {
            "description": "Job Progress",
            "example": 0,
            "type": "number"
          },
          "max_credit": {
            "description": "Max Credit",
            "example": 1,
            "type": "integer"
          },
          "max_duration": {
            "description": "Max Duration",
            "example": 1,
            "type": "integer"
          },
          "payload": {
            "description": "Payload",
            "example": {
              "key": "value"
            },
            "type": "object"
          },
          "pcvl_version": {
            "description": "PCVL version",
            "example": "1.0.0",
            "type": "string"
          },
          "platform": {
            "description": "Platform Name",
            "example": "simulator",
            "type": "string"
          },
          "platform_id": {
            "description": "Platform ID",
            "example": "5f8b9b0c-4b1c-4b1c-9b0c-4b1c4b1c4b1c",
            "type": "string"
          },
          "platform_name": {
            "description": "Platform Name use when platform_id is not provided",
            "example": "Platform Name",
            "type": "string"
          },
          "priority": {
            "description": "Priority",
            "example": 1,
            "type": "integer"
          },
          "process_id": {
            "description": "Process ID",
            "example": "process id",
            "type": "string"
          },
          "progress_message": {
            "description": "Progress Message",
            "example": "progress message",
            "type": "string"
          },
          "progress_stage": {
            "description": "Progress Stage",
            "example": "progress stage",
            "type": "string"
          },
          "rerun_from": {
            "description": "Rerun From",
            "example": "rerun from",
            "type": "string"
          },
          "result": {
            "description": "Result as JSON",
            "example": {
              "key": "value"
            },
            "type": "object"
          },
          "start_time": {
            "description": "Start Time",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "example": "pending",
            "type": "string"
          },
          "status_message": {
            "description": "Status Message",
            "example": "status message",
            "type": "string"
          },
          "token_id": {
            "description": "Token ID",
            "example": 1,
            "type": "integer"
          },
          "token_label": {
            "description": "Token Label",
            "example": "Token Label",
            "type": "string"
          },
          "user_id": {
            "description": "User ID",
            "example": 1,
            "type": "integer"
          },
          "worker_id": {
            "description": "Worker ID",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Admingetplatformstatus": {
        "properties": {
          "id": {
            "description": "Platform ID",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          },
          "name": {
            "description": "Platform name",
            "example": "Platform 1",
            "type": "string"
          },
          "perfs": {
            "additionalProperties": {},
            "description": "Platform perfs",
            "type": "object"
          },
          "status": {
            "description": "Platform status (running, available)",
            "example": "running",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "type": "object"
      },
      "Adminprogressjob": {
        "properties": {
          "current_duration": {
            "description": "Current duration",
            "example": 100,
            "type": "integer"
          },
          "message": {
            "description": "Message",
            "example": "Job is done",
            "type": "string"
          },
          "percent": {
            "description": "Percent",
            "example": 100,
            "type": "integer"
          },
          "process_id": {
            "description": "Process ID",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          },
          "worker_id": {
            "description": "Worker ID",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Adminprogressjobresponse": {
        "properties": {
          "job_status": {
            "description": "Job status",
            "example": "done",
            "type": "string"
          },
          "message": {
            "description": "Message",
            "example": "Job is done",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Adminprogressjobs": {
        "properties": {
          "duration": {
            "description": "Duration",
            "example": 100,
            "type": "integer"
          },
          "job_id": {
            "description": "Job ID",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          },
          "message": {
            "description": "Message",
            "example": "Job is done",
            "type": "string"
          },
          "percent": {
            "description": "Percent",
            "example": 100,
            "type": "integer"
          },
          "worker_id": {
            "description": "Worker ID",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdminprogressjobsReponse": {
        "properties": {
          "job_id": {
            "description": "Job ID",
            "example": "5f8b9b0c-4b1c-4b1c-9b0c-4b1c4b1c4b1c",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "example": "pending",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Adminregisterplatforms": {
        "properties": {
          "description": {
            "description": "Platform description",
            "example": "Platform 1 description",
            "type": "string"
          },
          "name": {
            "description": "Platform name",
            "example": "Platform 1",
            "type": "string"
          },
          "specs": {
            "additionalProperties": {},
            "description": "Platform specs",
            "type": "object"
          },
          "type": {
            "description": "Platform type",
            "example": "simulator",
            "type": "string"
          },
          "worker_id": {
            "description": "Worker ID",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          }
        },
        "required": [
          "description",
          "name"
        ],
        "type": "object"
      },
      "ApiKey": {
        "properties": {
          "company_id": {
            "description": "ID of the company that the user who owns the API key belongs to",
            "example": 1,
            "type": "integer"
          },
          "company_name": {
            "description": "Company name",
            "example": "Quandela",
            "type": "string"
          },
          "count": {
            "description": "Number of times the API key was used",
            "example": 1,
            "type": "integer"
          },
          "created_date": {
            "description": "Date when the API key was created",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "description": "Email of the user who owns the API key",
            "example": "admin@quande.la",
            "format": "email",
            "type": "string"
          },
          "expiration_date": {
            "description": "Date when the API key will expire",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "ID of the API key aka token",
            "example": 1,
            "type": "integer"
          },
          "is_apikey": {
            "description": "Whether the API key is an API key or not",
            "example": true,
            "type": "boolean"
          },
          "label": {
            "description": "Label of the API key",
            "example": "None",
            "type": "string"
          },
          "last_use_duration": {
            "description": "Last use duration of the token",
            "example": 1,
            "type": "integer"
          },
          "last_used_time": {
            "description": "Date when the API key was last used",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "priority": {
            "description": "Priority of the API key",
            "example": 1,
            "type": "integer"
          },
          "token": {
            "description": "API key aka token",
            "example": "_T_eyhahaha",
            "type": "string"
          },
          "user_id": {
            "description": "ID of the user who owns the API key",
            "example": 1,
            "type": "integer"
          },
          "username": {
            "description": "Username of the user who owns the API key",
            "example": "admin",
            "type": "string"
          },
          "valid": {
            "description": "Whether the API key is valid or not",
            "example": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Canceljob": {
        "properties": {
          "job_ids": {
            "description": "List Job ID",
            "items": {
              "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Company": {
        "properties": {
          "address": {
            "description": "Company address",
            "example": "Company address",
            "type": "string"
          },
          "billing_email": {
            "description": "Company billing email",
            "example": "billing@email.com",
            "format": "email",
            "type": "string"
          },
          "contact_email": {
            "description": "Company contact email",
            "example": "company@company.com",
            "format": "email",
            "type": "string"
          },
          "id": {
            "description": "Company id",
            "example": 1,
            "type": "integer"
          },
          "name": {
            "description": "Company name",
            "example": "Company name",
            "type": "string"
          },
          "tax_number": {
            "description": "Company tax number",
            "example": "Company tax number",
            "type": "string"
          },
          "tel": {
            "description": "Company tel",
            "example": "Company tel",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CompanyInvitation": {
        "properties": {
          "company_id": {
            "description": "Company id",
            "example": 1,
            "type": "integer"
          },
          "created_date": {
            "description": "Company invitation created date",
            "example": "2019-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "creator_id": {
            "description": "Company invitation creator id",
            "example": 1,
            "type": "integer"
          },
          "id": {
            "description": "Company invitation id",
            "example": 1,
            "type": "integer"
          },
          "status": {
            "description": "Company invitation status",
            "example": "pending",
            "type": "string"
          },
          "user_id": {
            "description": "User id",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CreateJob": {
        "properties": {
          "job_name": {
            "description": "Job Name",
            "example": "Job Name",
            "type": "string"
          },
          "max_credit": {
            "description": "Max Credit",
            "example": 1,
            "type": "integer"
          },
          "max_duration": {
            "description": "Max Duration",
            "example": 1,
            "type": "integer"
          },
          "payload": {
            "description": "Payload",
            "example": {
              "key": "value"
            },
            "type": "object"
          },
          "platform": {
            "description": "Platform Name",
            "example": "simulator",
            "type": "string"
          },
          "platform_id": {
            "description": "Platform ID",
            "example": "5f8b9b0c-4b1c-4b1c-9b0c-4b1c4b1c4b1c",
            "type": "string"
          },
          "platform_name": {
            "description": "Platform Name use when platform_id is not provided",
            "example": "Platform Name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateJobResponse": {
        "properties": {
          "job_id": {
            "description": "Job ID",
            "example": "5f8b9b0c-4b1c-4b1c-9b0c-4b1c4b1c4b1c",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Createanewtag": {
        "properties": {
          "name": {
            "description": "Tag Name",
            "example": "Tag Name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Createaplatform": {
        "properties": {
          "description": {
            "description": "Platform description",
            "example": "Platform 1 description",
            "type": "string"
          },
          "name": {
            "description": "Platform name",
            "example": "Platform 1",
            "type": "string"
          },
          "perfs": {
            "additionalProperties": {},
            "description": "Platform perfs",
            "type": "object"
          },
          "specs": {
            "additionalProperties": {},
            "description": "Platform specs",
            "type": "object"
          },
          "svg": {
            "description": "Platform svg  image",
            "type": "string"
          },
          "type": {
            "description": "Platform type",
            "example": "simulator",
            "type": "string"
          }
        },
        "required": [
          "description",
          "name"
        ],
        "type": "object"
      },
      "CreateaplatformResponse": {
        "properties": {
          "id": {
            "description": "Platform ID",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "Credit": {
        "properties": {
          "amount": {
            "description": "Amount",
            "example": 1,
            "type": "integer"
          },
          "platform_type_id": {
            "description": "Platform type id",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CreditTransaction": {
        "properties": {
          "amount": {
            "description": "Amount",
            "example": 1,
            "type": "number"
          },
          "created_date": {
            "description": "Created date",
            "example": "2019-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description",
            "example": "Description",
            "type": "string"
          },
          "id": {
            "description": "Credit transaction id",
            "example": 1,
            "type": "integer"
          },
          "job_id": {
            "description": "Job id",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "integer"
          },
          "job_name": {
            "description": "Job name",
            "example": "Job name",
            "type": "string"
          },
          "platform_name": {
            "description": "Platform name",
            "example": "Platform name",
            "type": "string"
          },
          "platform_type": {
            "description": "Platform type",
            "example": "Platform type",
            "type": "string"
          },
          "platform_type_id": {
            "description": "Platform type id",
            "example": 1,
            "type": "integer"
          },
          "user_id": {
            "description": "User id",
            "example": 1,
            "type": "integer"
          },
          "worker_id": {
            "description": "Worker id",
            "example": "Worker id",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Fetchtoken": {
        "properties": {
          "code": {
            "description": "Code",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Fetchtokenresponse": {
        "properties": {
          "access_token": {
            "description": "Access token",
            "type": "string"
          },
          "state": {
            "description": "State",
            "type": "string"
          },
          "token_type": {
            "description": "Token type",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ForgotPassword": {
        "properties": {
          "email": {
            "description": "Email",
            "example": "john@doe.com",
            "format": "email",
            "type": "string"
          },
          "web_type": {
            "description": "Web type ('admin'|'ide')",
            "example": "ide",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GenerateToken": {
        "properties": {
          "duration": {
            "description": "Duration of the token in seconds",
            "example": "1d",
            "type": "string"
          },
          "label": {
            "description": "Label of the token",
            "example": "unknown",
            "type": "string"
          },
          "priority": {
            "description": "Priority of the token",
            "example": 1,
            "type": "integer"
          },
          "user_id": {
            "description": "User ID of the token",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GenerateTokenResponse": {
        "properties": {
          "duration": {
            "description": "Duration of the token in seconds",
            "example": "1d",
            "type": "string"
          },
          "token": {
            "description": "Generated token",
            "example": "_T_eyjhbjhbjhasvj",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetJobResult": {
        "properties": {
          "result": {
            "description": "Result as JSON",
            "example": {
              "key": "value"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Getjobsstatisticresponse": {
        "properties": {
          "categories": {
            "description": "List of categories",
            "items": {
              "example": "2020-01-01T00:00:00Z",
              "type": "string"
            },
            "type": "array"
          },
          "totalValue": {
            "items": {
              "additionalProperties": {},
              "type": "object"
            },
            "type": "array"
          },
          "values": {
            "description": "List of values",
            "items": {
              "additionalProperties": {},
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Getplatformperfs": {
        "properties": {
          "perfs": {
            "additionalProperties": {},
            "description": "Platform perfs",
            "type": "object"
          }
        },
        "type": "object"
      },
      "Getplatformspecs": {
        "properties": {
          "specs": {
            "additionalProperties": {},
            "description": "Platform specs",
            "type": "object"
          }
        },
        "type": "object"
      },
      "Getplatformstatus": {
        "properties": {
          "name": {
            "description": "Platform name",
            "example": "Platform 1",
            "type": "string"
          },
          "perfs": {
            "additionalProperties": {},
            "description": "Platform perfs",
            "type": "object"
          },
          "status": {
            "description": "Platform status (running, available)",
            "example": "running",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "GithubAuthorizeResponse": {
        "properties": {
          "duration": {
            "description": "Duration of access token in seconds",
            "example": 3600,
            "type": "integer"
          },
          "token": {
            "description": "Access token",
            "example": "_T_eyjkhbajshasfkjbwjhgkajshbkjauyhgfjkas",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HTTPError": {
        "properties": {
          "detail": {
            "type": "object"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Inviteuserstocompany": {
        "properties": {
          "user_ids": {
            "items": {
              "description": "User id",
              "example": 1,
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Job": {
        "properties": {
          "command": {
            "description": "Command",
            "example": "command",
            "type": "string"
          },
          "company_id": {
            "description": "Company ID",
            "example": 1,
            "type": "integer"
          },
          "company_name": {
            "description": "Company Name",
            "example": "Company Name",
            "type": "string"
          },
          "created_date": {
            "description": "Created Date",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "duration": {
            "description": "Duration",
            "example": 1,
            "type": "integer"
          },
          "email": {
            "description": "Email",
            "example": "key@value.label",
            "format": "email",
            "type": "string"
          },
          "failure_code": {
            "description": "Failure Code",
            "example": "failure code",
            "type": "string"
          },
          "is_rerun": {
            "description": "Is Rerun",
            "example": true,
            "type": "boolean"
          },
          "job_id": {
            "description": "Job ID",
            "example": "5f8b9b0c-4b1c-4b1c-9b0c-4b1c4b1c4b1c",
            "type": "string"
          },
          "job_name": {
            "description": "Job Name",
            "example": "Job Name",
            "type": "string"
          },
          "job_progress": {
            "description": "Job Progress",
            "example": 0,
            "type": "number"
          },
          "max_credit": {
            "description": "Max Credit",
            "example": 1,
            "type": "integer"
          },
          "max_duration": {
            "description": "Max Duration",
            "example": 1,
            "type": "integer"
          },
          "payload": {
            "description": "Payload",
            "example": {
              "key": "value"
            },
            "type": "object"
          },
          "platform": {
            "description": "Platform Name",
            "example": "simulator",
            "type": "string"
          },
          "platform_id": {
            "description": "Platform ID",
            "example": "5f8b9b0c-4b1c-4b1c-9b0c-4b1c4b1c4b1c",
            "type": "string"
          },
          "platform_name": {
            "description": "Platform Name use when platform_id is not provided",
            "example": "Platform Name",
            "type": "string"
          },
          "priority": {
            "description": "Priority",
            "example": 1,
            "type": "integer"
          },
          "process_id": {
            "description": "Process ID",
            "example": "process id",
            "type": "string"
          },
          "progress_message": {
            "description": "Progress Message",
            "example": "progress message",
            "type": "string"
          },
          "progress_stage": {
            "description": "Progress Stage",
            "example": "progress stage",
            "type": "string"
          },
          "rerun_from": {
            "description": "Rerun From",
            "example": "rerun from",
            "type": "string"
          },
          "result": {
            "description": "Result as JSON",
            "example": {
              "key": "value"
            },
            "type": "object"
          },
          "start_time": {
            "description": "Start Time",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "example": "pending",
            "type": "string"
          },
          "status_message": {
            "description": "Status Message",
            "example": "status message",
            "type": "string"
          },
          "token_id": {
            "description": "Token ID",
            "example": 1,
            "type": "integer"
          },
          "token_label": {
            "description": "Token Label",
            "example": "Token Label",
            "type": "string"
          },
          "user_id": {
            "description": "User ID",
            "example": 1,
            "type": "integer"
          },
          "worker_id": {
            "description": "Worker ID",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Listcompaniespagination": {
        "properties": {
          "current_page": {
            "default": 1,
            "description": "Current page",
            "type": "integer"
          },
          "name": {
            "description": "Company name",
            "example": "Company name",
            "type": "string"
          },
          "size": {
            "default": 10,
            "description": "Size of page",
            "type": "integer"
          },
          "sort_by": {
            "default": "created_at",
            "description": "Sort by field",
            "type": "string"
          },
          "sort_direction": {
            "default": "desc",
            "description": "Sort direction",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Listcompaniespaginationresponse": {
        "properties": {
          "content": {
            "description": "List of companies",
            "items": {
              "$ref": "#/components/schemas/Company"
            },
            "type": "array"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "totalElements": {
            "description": "Total number of elements",
            "type": "integer"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ListtokenResponse": {
        "properties": {
          "company_id": {
            "description": "ID of the company that the user who owns the API key belongs to",
            "example": 1,
            "type": "integer"
          },
          "company_name": {
            "description": "Company name",
            "example": "Quandela",
            "type": "string"
          },
          "count": {
            "description": "Number of times the API key was used",
            "example": 1,
            "type": "integer"
          },
          "created_date": {
            "description": "Date when the API key was created",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "description": "Email of the user who owns the API key",
            "example": "admin@quande.la",
            "format": "email",
            "type": "string"
          },
          "expiration_date": {
            "description": "Date when the API key will expire",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "ID of the API key aka token",
            "example": 1,
            "type": "integer"
          },
          "is_apikey": {
            "description": "Whether the API key is an API key or not",
            "example": true,
            "type": "boolean"
          },
          "label": {
            "description": "Label of the API key",
            "example": "None",
            "type": "string"
          },
          "last_used_time": {
            "description": "Date when the API key was last used",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "priority": {
            "description": "Priority of the API key",
            "example": 1,
            "type": "integer"
          },
          "token": {
            "description": "API key aka token",
            "example": "_T_eyhahaha",
            "type": "string"
          },
          "user_id": {
            "description": "ID of the user who owns the API key",
            "example": 1,
            "type": "integer"
          },
          "username": {
            "description": "Username of the user who owns the API key",
            "example": "admin",
            "type": "string"
          },
          "valid": {
            "description": "Whether the API key is valid or not",
            "example": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Login": {
        "properties": {
          "email": {
            "type": "string"
          },
          "mode": {
            "default": "user",
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "type": "object"
      },
      "LoginResponse": {
        "properties": {
          "duration": {
            "type": "string"
          },
          "is_first_login": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "duration",
          "is_first_login",
          "token"
        ],
        "type": "object"
      },
      "MarkNotificationAsRead": {
        "properties": {
          "all": {
            "description": "Mark all notifications as read",
            "example": false,
            "type": "boolean"
          },
          "notification_ids": {
            "description": "List of notification ids",
            "items": {
              "description": "Notification id",
              "example": 1,
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MarkNotificationAsUnRead": {
        "properties": {
          "all": {
            "description": "Mark all notifications as unread",
            "example": false,
            "type": "boolean"
          },
          "notification_ids": {
            "description": "List of notification ids",
            "items": {
              "description": "Notification id",
              "example": 1,
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Meta": {
        "properties": {},
        "type": "object"
      },
      "News": {
        "properties": {
          "active_at": {
            "description": "News active date",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "content": {
            "description": "News content",
            "example": "News content",
            "type": "string"
          },
          "created_date": {
            "description": "News created date",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "News ID",
            "example": 1,
            "type": "integer"
          },
          "image_url": {
            "description": "News image url",
            "example": "https://example.com/image.png",
            "type": "string"
          },
          "title": {
            "description": "News title",
            "example": "News title",
            "type": "string"
          },
          "type": {
            "description": "News type (normal, system_maintenance)",
            "example": "normal",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ObjectIds": {
        "properties": {
          "object_ids": {
            "description": "List of object ids",
            "example": [
              "5f2e7b8d4f2e7b8d4f2e7b8d"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PageNewsResponse": {
        "properties": {
          "content": {
            "description": "List of news",
            "items": {
              "$ref": "#/components/schemas/News"
            },
            "type": "array"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "totalElements": {
            "description": "Total number of elements",
            "type": "integer"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PagePlatform": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/PlatformPermission"
            },
            "type": "array"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "totalElements": {
            "description": "Total number of elements",
            "type": "integer"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PageTokensResponse": {
        "properties": {
          "content": {
            "description": "List of tokens",
            "items": {
              "$ref": "#/components/schemas/ApiKey"
            },
            "type": "array"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "totalElements": {
            "description": "Total number of elements",
            "type": "integer"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PageUserCreditTransaction": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/CreditTransaction"
            },
            "type": "array"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "totalElements": {
            "description": "Total number of elements",
            "type": "integer"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Pagepermissiontoaccessplatform": {
        "properties": {
          "content": {
            "description": "List of (company | user | token) info",
            "items": {
              "additionalProperties": {},
              "type": "object"
            },
            "type": "array"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "totalElements": {
            "description": "Total number of elements",
            "type": "integer"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PageSystemNotificationResponse": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/SystemNotification"
            },
            "type": "array"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "totalElements": {
            "description": "Total number of elements",
            "type": "integer"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PagingUserConnectionLogs": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/UserConnectionLogs"
            },
            "type": "array"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "totalElements": {
            "description": "Total number of elements",
            "type": "integer"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Platform": {
        "properties": {
          "created_date": {
            "description": "Platform created date",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Platform description",
            "example": "Platform 1 description",
            "type": "string"
          },
          "id": {
            "description": "Platform ID",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          },
          "jobs": {
            "description": "Counting of all jobs",
            "example": 0,
            "type": "integer"
          },
          "name": {
            "description": "Platform name",
            "example": "Platform 1",
            "type": "string"
          },
          "perfs": {
            "additionalProperties": {},
            "description": "Platform perfs",
            "type": "object"
          },
          "specs": {
            "additionalProperties": {},
            "description": "Platform specs",
            "type": "object"
          },
          "status": {
            "description": "Platform status (running, available)",
            "example": "running",
            "type": "string"
          },
          "svg": {
            "description": "Platform svg  image",
            "type": "string"
          },
          "type": {
            "description": "Platform type",
            "example": "simulator",
            "type": "string"
          },
          "waiting_jobs": {
            "description": "Counting of waiting jobs",
            "example": 0,
            "type": "integer"
          },
          "worker_id": {
            "description": "Worker ID",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          }
        },
        "required": [
          "description",
          "id",
          "name"
        ],
        "type": "object"
      },
      "PlatformDetail": {
        "properties": {
          "created_date": {
            "description": "Platform created date",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Platform description",
            "example": "Platform 1 description",
            "type": "string"
          },
          "id": {
            "description": "Platform ID",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          },
          "jobs": {
            "description": "Counting of all jobs",
            "example": 0,
            "type": "integer"
          },
          "name": {
            "description": "Platform name",
            "example": "Platform 1",
            "type": "string"
          },
          "perfs": {
            "additionalProperties": {},
            "description": "Platform perfs",
            "type": "object"
          },
          "specs": {
            "additionalProperties": {},
            "description": "Platform specs",
            "type": "object"
          },
          "status": {
            "description": "Platform status (running, available)",
            "example": "running",
            "type": "string"
          },
          "svg": {
            "description": "Platform svg  image",
            "type": "string"
          },
          "type": {
            "description": "Platform type",
            "example": "simulator",
            "type": "string"
          },
          "waiting_jobs": {
            "description": "Counting of waiting jobs",
            "example": 0,
            "type": "integer"
          },
          "worker_id": {
            "description": "Worker ID",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          }
        },
        "required": [
          "description",
          "id",
          "name"
        ],
        "type": "object"
      },
      "PlatformHistoryPage": {
        "properties": {
          "content": {
            "description": "List of platform history info",
            "items": {
              "$ref": "#/components/schemas/PlatformHistory"
            },
            "type": "array"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "totalElements": {
            "description": "Total number of elements",
            "type": "integer"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PlatformInfo": {
        "properties": {
          "duration": {
            "description": "Duration",
            "example": 100,
            "type": "integer"
          },
          "job_id": {
            "description": "Job id",
            "example": "5f2e-7b8d-4f2e-7b8d-4f2e-7b8d",
            "type": "string"
          },
          "job_progess": {
            "description": "Job progress",
            "example": 100,
            "type": "integer"
          },
          "name": {
            "description": "Platform name",
            "example": "qpu",
            "type": "string"
          },
          "perfs": {
            "additionalProperties": {},
            "description": "Platform perfs",
            "type": "object"
          },
          "status": {
            "description": "Platform status",
            "example": "running",
            "type": "string"
          },
          "worker_id": {
            "description": "Worker id",
            "example": "5f2e-7b8d-4f2e-7b8d-4f2e-7b8d",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PlatformPagination": {
        "properties": {
          "content": {
            "description": "List of platforms",
            "items": {
              "$ref": "#/components/schemas/Platform"
            },
            "type": "array"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "totalElements": {
            "description": "Total number of elements",
            "type": "integer"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PlatformPaginationforadmin": {
        "properties": {
          "content": {
            "description": "List of platforms",
            "items": {
              "$ref": "#/components/schemas/Platform"
            },
            "type": "array"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "totalElements": {
            "description": "Total number of elements",
            "type": "integer"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PlatformHistory": {
        "properties": {
          "created_date": {
            "description": "Platform history created date",
            "example": "2019-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Platform history id",
            "example": 1,
            "type": "integer"
          },
          "perfs": {
            "additionalProperties": {},
            "description": "Platform perfs",
            "type": "object"
          },
          "platform_id": {
            "description": "Platform id",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          },
          "platform_name": {
            "description": "Platform name",
            "example": "simulator",
            "type": "string"
          },
          "updater_id": {
            "description": "user id who updated the platform",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PlatformPermission": {
        "properties": {
          "description": {
            "description": "Platform description",
            "example": "simulator platform",
            "type": "string"
          },
          "id": {
            "description": "Platform permission id",
            "example": 1,
            "type": "integer"
          },
          "max_credit": {
            "description": "Max credit",
            "example": 10,
            "type": "integer"
          },
          "max_duration": {
            "description": "Max duration in seconds",
            "example": 3600,
            "type": "integer"
          },
          "name": {
            "description": "Platform name",
            "example": "simulator",
            "type": "string"
          },
          "platform_id": {
            "description": "Platform id",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          },
          "type": {
            "description": "Platform type: simulator or qpu",
            "example": "qpu",
            "type": "string"
          },
          "user_id": {
            "description": "User id",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PlatformStatistic": {
        "properties": {
          "platform_information": {
            "additionalProperties": {},
            "description": "Platform information",
            "type": "object"
          },
          "platform_statistics": {
            "additionalProperties": {},
            "description": "Platform statistics",
            "type": "object"
          }
        },
        "type": "object"
      },
      "PublicPlatformsResponse": {
        "properties": {
          "description": {
            "description": "Platform description",
            "example": "Platform 1 description",
            "type": "string"
          },
          "name": {
            "description": "Platform name",
            "example": "Platform 1",
            "type": "string"
          },
          "status": {
            "description": "Platform status (running, available)",
            "example": "running",
            "type": "string"
          },
          "type": {
            "description": "Platform type",
            "example": "simulator",
            "type": "string"
          }
        },
        "required": [
          "description",
          "name"
        ],
        "type": "object"
      },
      "QueryUsersResponse": {
        "properties": {
          "content": {
            "description": "List of users",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "type": "array"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "totalElements": {
            "description": "Total number of elements",
            "type": "integer"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Queryjobsresponse": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/Job"
            },
            "type": "array"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "totalElements": {
            "description": "Total number of elements",
            "type": "integer"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RemoveTokenPlatform": {
        "properties": {
          "platform_ids": {
            "description": "List of platform ids to remove, must not be empty",
            "items": {
              "description": "Platform id",
              "example": 1,
              "type": "integer"
            },
            "type": "array"
          }
        },
        "required": [
          "platform_ids"
        ],
        "type": "object"
      },
      "RemoveUserPlatform": {
        "properties": {
          "platform_ids": {
            "description": "list[Platform id] to remove",
            "items": {
              "description": "Platform id",
              "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Removecompanyplatform": {
        "properties": {
          "platform_ids": {
            "items": {
              "description": "Platform id",
              "example": 1,
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Removetagfromobject": {
        "properties": {
          "object_ids": {
            "description": "One or many object ids to remove tag",
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "tag_id": {
            "description": "One or many tag ids to remove from object",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Removeusersfromcompany": {
        "properties": {
          "user_ids": {
            "items": {
              "description": "User id",
              "example": 1,
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReproduceJob": {
        "properties": {
          "job_name": {
            "description": "Job Name",
            "example": "Job Name",
            "type": "string"
          },
          "payload": {
            "description": "Payload",
            "example": {
              "key": "value"
            },
            "type": "object"
          },
          "platform_id": {
            "description": "Platform ID",
            "example": "5f8b9b0c-4b1c-4b1c-9b0c-4b1c4b1c4b1c",
            "type": "string"
          },
          "token_id": {
            "description": "Token ID",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RerunJob": {
        "properties": {
          "job_name": {
            "description": "Job Name",
            "example": "Job Name",
            "type": "string"
          },
          "payload": {
            "description": "Payload",
            "example": {
              "key": "value"
            },
            "type": "object"
          },
          "platform_id": {
            "description": "Platform ID",
            "example": "5f8b9b0c-4b1c-4b1c-9b0c-4b1c4b1c4b1c",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResetPassword": {
        "properties": {
          "current_password": {
            "description": "Current password",
            "example": "*********",
            "type": "string"
          },
          "password": {
            "description": "Password",
            "example": "*********",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResetPasswordviacode": {
        "properties": {
          "password": {
            "description": "Password",
            "example": "*********",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Revoketoken": {
        "properties": {
          "token": {
            "description": "API key aka token",
            "example": "_T_eyhahaha",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Role": {
        "properties": {
          "id": {
            "description": "Role id",
            "example": 1,
            "type": "integer"
          },
          "name": {
            "description": "Role name",
            "example": "admin",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerStatus": {
        "properties": {
          "db": {
            "description": "Database status",
            "type": "string"
          },
          "server": {
            "description": "Server status",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Signup": {
        "properties": {
          "company": {
            "example": "Ravenclaw",
            "type": "string"
          },
          "country_based": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "framework": {
            "type": "string"
          },
          "general_news_notification": {
            "default": true,
            "type": "boolean"
          },
          "job_notification": {
            "default": true,
            "type": "boolean"
          },
          "known_from": {
            "type": "string"
          },
          "language": {
            "default": "en",
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "plan": {
            "default": "free",
            "type": "string"
          },
          "plan_additional": {
            "default": "free",
            "type": "string"
          },
          "recaptcha_response": {
            "type": "string"
          },
          "receive_news": {
            "default": [],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "system_news_notification": {
            "default": true,
            "type": "boolean"
          },
          "topic": {
            "default": [],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password",
          "username"
        ],
        "type": "object"
      },
      "SignupResponseSuccess": {
        "properties": {
          "user_id": {
            "description": "User ID created",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Startsystemmaintenance": {
        "properties": {
          "duration": {
            "description": "Duration",
            "example": 3600,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SystemMaintenanceHistoryResponse": {
        "properties": {
          "content": {
            "description": "System maintenance history",
            "items": {
              "$ref": "#/components/schemas/SystemMaintenance"
            },
            "type": "array"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "totalElements": {
            "description": "Total number of elements",
            "type": "integer"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SystemMaintenance": {
        "properties": {
          "creator_id": {
            "description": "Creator ID",
            "example": 1,
            "type": "integer"
          },
          "duration": {
            "description": "Duration",
            "example": 3600,
            "type": "integer"
          },
          "remaining_maintenance_time": {
            "description": "Remaining maintenance time",
            "example": 3600,
            "type": "integer"
          },
          "start_time": {
            "description": "Start time",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "example": "under_maintenance",
            "type": "string"
          },
          "stop_time": {
            "description": "Stop time",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SystemNotification": {
        "properties": {
          "active_at": {
            "description": "Active at",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "apply_for": {
            "description": "Apply for",
            "example": "WEBADMIN",
            "type": "string"
          },
          "content": {
            "description": "Notification content",
            "example": "Notification content",
            "type": "string"
          },
          "created_date": {
            "description": "Created date",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "expired_at": {
            "description": "Expired at",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "ID",
            "example": 1,
            "type": "integer"
          },
          "title": {
            "description": "Notification title",
            "example": "Notification title",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SystemSettings": {
        "properties": {
          "created_date": {
            "description": "Created date",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "email_notification": {
            "description": "Email notification",
            "example": true,
            "type": "boolean"
          },
          "last_update": {
            "description": "Last update",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "updater_id": {
            "description": "Updater id",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Tag": {
        "properties": {
          "id": {
            "description": "Tag ID",
            "example": 1,
            "type": "integer"
          },
          "name": {
            "description": "Tag Name",
            "example": "Tag Name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Tag1": {
        "properties": {
          "created_date": {
            "description": "Tag Creation Date",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "creator_id": {
            "description": "Tag Creator ID",
            "example": 1,
            "type": "integer"
          },
          "id": {
            "description": "Tag ID",
            "example": 1,
            "type": "integer"
          },
          "last_update": {
            "description": "Tag Last Update Date",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Tag Name",
            "example": "Tag Name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateJob": {
        "properties": {
          "priority": {
            "description": "Priority",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UpdateJobLimit": {
        "properties": {
          "max_credit": {
            "description": "Max Credit",
            "example": 1,
            "type": "integer"
          },
          "max_duration": {
            "description": "Max Duration",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UpdateToken": {
        "properties": {
          "label": {
            "description": "Label of the API key",
            "example": "None",
            "type": "string"
          },
          "priority": {
            "description": "Priority of the API key",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UpdateTokenLimit": {
        "properties": {
          "max_credit": {
            "description": "Max credit",
            "example": 1,
            "type": "integer"
          },
          "max_duration": {
            "description": "Max duration",
            "example": 1,
            "type": "integer"
          },
          "platform_id": {
            "description": "Platform id",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UpdateUser": {
        "properties": {
          "company_id": {
            "description": "Company ID",
            "type": "integer"
          },
          "email": {
            "description": "Email",
            "example": "john@doe.com",
            "format": "email",
            "type": "string"
          },
          "has_login": {
            "description": "Has login",
            "example": true,
            "type": "boolean"
          },
          "language": {
            "description": "Language",
            "type": "string"
          },
          "password": {
            "description": "Password",
            "example": "*********",
            "type": "string"
          },
          "receive_mail": {
            "description": "Receive mail",
            "example": true,
            "type": "boolean"
          },
          "username": {
            "description": "Username",
            "example": "john",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Updatecompany": {
        "properties": {
          "address": {
            "description": "Company address",
            "example": "Company address",
            "type": "string"
          },
          "billing_email": {
            "description": "Company billing email",
            "example": "billing@email.com",
            "format": "email",
            "type": "string"
          },
          "contact_email": {
            "description": "Company contact email",
            "example": "company@company.com",
            "format": "email",
            "type": "string"
          },
          "name": {
            "description": "Company name",
            "example": "Company name",
            "type": "string"
          },
          "tax_number": {
            "description": "Company tax number",
            "example": "Company tax number",
            "type": "string"
          },
          "tel": {
            "description": "Company tel",
            "example": "Company tel",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Updatenametagbyid": {
        "properties": {
          "name": {
            "description": "Tag Name",
            "example": "Tag Name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Updatenews": {
        "properties": {
          "active_at": {
            "description": "News active date",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "content": {
            "description": "News content",
            "example": "News content",
            "type": "string"
          },
          "image_url": {
            "description": "News image url",
            "example": "https://example.com/image.png",
            "type": "string"
          },
          "title": {
            "description": "News title",
            "example": "News title",
            "type": "string"
          },
          "type": {
            "description": "News type (normal, system_maintenance)",
            "example": "normal",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Updateplatform": {
        "properties": {
          "description": {
            "description": "Platform description",
            "example": "Platform 1 description",
            "type": "string"
          },
          "name": {
            "description": "Platform name",
            "example": "Platform 1",
            "type": "string"
          },
          "perfs": {
            "additionalProperties": {},
            "description": "Platform perfs",
            "type": "object"
          },
          "specs": {
            "additionalProperties": {},
            "description": "Platform specs",
            "type": "object"
          },
          "status": {
            "description": "Platform status (running, available)",
            "example": "running",
            "type": "string"
          },
          "svg": {
            "description": "Platform svg  image",
            "type": "string"
          },
          "type": {
            "description": "Platform type",
            "example": "simulator",
            "type": "string"
          }
        },
        "required": [
          "description",
          "name"
        ],
        "type": "object"
      },
      "Updatesystemnotification": {
        "properties": {
          "active_at": {
            "description": "Active at",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "apply_for": {
            "description": "Apply for",
            "example": "WEBADMIN",
            "type": "string"
          },
          "content": {
            "description": "Notification content",
            "example": "Notification content",
            "type": "string"
          },
          "expired_at": {
            "description": "Expired at",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "title": {
            "description": "Notification title",
            "example": "Notification title",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Updatesystemsettings": {
        "properties": {
          "email_notification": {
            "description": "Email notification",
            "example": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Updateuserlimit": {
        "properties": {
          "max_credit": {
            "description": "Max credit",
            "example": 10,
            "type": "integer"
          },
          "max_duration": {
            "description": "Max duration in seconds",
            "example": 3600,
            "type": "integer"
          },
          "platform_id": {
            "description": "Platform id",
            "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
            "type": "string"
          }
        },
        "type": "object"
      },
      "User": {
        "properties": {
          "active": {
            "description": "Is user active",
            "example": true,
            "type": "boolean"
          },
          "block_login": {
            "description": "Block login",
            "example": true,
            "type": "boolean"
          },
          "company_id": {
            "description": "Company ID",
            "type": "integer"
          },
          "company_name": {
            "description": "Company name",
            "example": "quandela",
            "type": "string"
          },
          "company_name_temp": {
            "description": "Company name temp",
            "example": "quandela",
            "type": "string"
          },
          "created_date": {
            "description": "Created date",
            "example": "2019-01-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "credits": {
            "description": "Credits",
            "items": {
              "$ref": "#/components/schemas/UserCredit"
            },
            "type": "array"
          },
          "email": {
            "description": "Email",
            "example": "john@doe.com",
            "format": "email",
            "type": "string"
          },
          "has_login": {
            "description": "Has login",
            "example": true,
            "type": "boolean"
          },
          "id": {
            "description": "User ID",
            "example": 1,
            "type": "integer"
          },
          "independent_user": {
            "description": "Is independent user",
            "example": true,
            "type": "boolean"
          },
          "is_validated_email": {
            "description": "Is validated email",
            "example": true,
            "type": "boolean"
          },
          "language": {
            "description": "Language",
            "type": "string"
          },
          "last_time_logged_in": {
            "description": "Last time logged in",
            "example": "2019-01-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "logged_in": {
            "description": "Is user logged in",
            "example": true,
            "type": "boolean"
          },
          "monitoring_user": {
            "description": "Is monitoring user",
            "example": true,
            "type": "boolean"
          },
          "password": {
            "description": "Password",
            "example": "password",
            "type": "string"
          },
          "pending_validation": {
            "description": "Is pending validation",
            "example": true,
            "type": "boolean"
          },
          "platform_ids": {
            "description": "Platform IDs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "priority": {
            "description": "Priority",
            "example": 1,
            "type": "integer"
          },
          "receive_mail": {
            "description": "Receive mail",
            "example": true,
            "type": "boolean"
          },
          "role": {
            "description": "Role name",
            "example": "admin",
            "type": "string"
          },
          "role_id": {
            "description": "Role ID",
            "type": "integer"
          },
          "send_invitation": {
            "description": "Send invitation",
            "example": true,
            "type": "boolean"
          },
          "tags": {
            "description": "Tags",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array"
          },
          "username": {
            "description": "Username",
            "example": "john",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserNotificationListResponse": {
        "properties": {
          "content": {
            "description": "List of user notifications",
            "items": {
              "$ref": "#/components/schemas/UserNotification"
            },
            "type": "array"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "totalElements": {
            "description": "Total number of elements",
            "type": "integer"
          },
          "totalPages": {
            "description": "Total number of pages",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UserSurveyStatistic": {
        "properties": {
          "data": {
            "description": "Data",
            "example": [
              {
                "count": 1,
                "name": "name"
              }
            ],
            "items": {},
            "type": "array"
          },
          "name": {
            "description": "Name",
            "example": "name",
            "type": "string"
          },
          "total": {
            "description": "Total",
            "example": 1,
            "type": "integer"
          },
          "type": {
            "description": "Type",
            "example": "type",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserConnectionLogs": {
        "properties": {
          "created_date": {
            "description": "Created date",
            "format": "date-time",
            "type": "string"
          },
          "ip_address": {
            "description": "IP address"
          },
          "user_agent": {
            "description": "User agent",
            "type": "string"
          },
          "user_email": {
            "description": "User email",
            "format": "email",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserCredit": {
        "properties": {
          "created_date": {
            "description": "Created date",
            "example": "2019-01-01T00:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "credit_balance": {
            "description": "Credit balance",
            "example": 36000,
            "type": "number"
          },
          "id": {
            "description": "Credit ID",
            "example": 1,
            "type": "integer"
          },
          "platform_type": {
            "description": "Platform type",
            "example": "simulator",
            "type": "string"
          },
          "platform_type_id": {
            "description": "Platform type ID",
            "example": 1,
            "type": "integer"
          },
          "user_id": {
            "description": "User ID",
            "example": 3,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UserNotification": {
        "properties": {
          "active_at": {
            "description": "User notification active date",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "content": {
            "description": "User notification content",
            "example": "User notification content",
            "type": "string"
          },
          "created_date": {
            "description": "User notification created date",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "User notification id",
            "example": 1,
            "type": "integer"
          },
          "object_id": {
            "description": "User notification object id",
            "example": "User notification object id",
            "type": "string"
          },
          "object_type": {
            "description": "User notification object type (job, news, company_invitation)",
            "example": "job",
            "type": "string"
          },
          "read": {
            "description": "User notification read status",
            "example": false,
            "type": "boolean"
          },
          "title": {
            "description": "User notification title",
            "example": "User notification title",
            "type": "string"
          },
          "type": {
            "description": "User notification type",
            "example": "NEWS",
            "type": "string"
          },
          "user_id": {
            "description": "User id",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UserSurvey": {
        "properties": {
          "country_based": {
            "description": "Country Based",
            "example": "country_based",
            "type": "string"
          },
          "created_date": {
            "description": "Created Date",
            "example": "2019-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "framework": {
            "description": "Framework",
            "example": "framework",
            "type": "string"
          },
          "id": {
            "description": "User Survey ID",
            "example": 1,
            "type": "integer"
          },
          "known_from": {
            "description": "Known From",
            "example": "known_from",
            "type": "string"
          },
          "plan": {
            "description": "Plan",
            "example": "plan",
            "type": "string"
          },
          "plan_additional": {
            "description": "Plan Additional",
            "example": "plan_additional",
            "type": "string"
          },
          "receive_news": {
            "description": "Receive News",
            "example": "receive_news",
            "type": "string"
          },
          "topic": {
            "description": "Topic",
            "example": "topic",
            "type": "string"
          },
          "user_id": {
            "description": "User ID",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ValidateUser": {
        "properties": {
          "html_template": {
            "description": "Html template",
            "example": "html template",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "detail": {
            "properties": {
              "<location>": {
                "properties": {
                  "<field_name>": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "VerifyCaptcha": {
        "properties": {
          "recaptcha_response": {
            "description": "Recaptcha response",
            "example": "recaptcha_response",
            "type": "string"
          }
        },
        "required": [
          "recaptcha_response"
        ],
        "type": "object"
      },
      "systemmaintenancestatus": {
        "properties": {
          "duration": {
            "description": "Duration",
            "example": 3600,
            "type": "integer"
          },
          "remaining_maintenance_time": {
            "description": "Remaining maintenance time",
            "example": 3600,
            "type": "integer"
          },
          "start_time": {
            "description": "Start time",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "example": "under_maintenance",
            "type": "string"
          },
          "stop_time": {
            "description": "Stop time",
            "example": "2020-01-01 00:00:00",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "externalDocs": {
    "description": "Find more info here",
    "url": "http://docs.example.com"
  },
  "info": {
    "contact": {
      "email": "support@example.com",
      "name": "API Support",
      "url": "http://www.example.com/support"
    },
    "description": "The description of the API. \n\nThis attribute can also be configured from the config with the `DESCRIPTION` configuration key. \n\n### Authentication\n\n\nIn header the access token generated from the authorization-server.\n\n\n``` Authorization: Bearer YOUR_ACCESS_TOKEN ```",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "http://example.com",
    "title": "Quandela Web Api",
    "version": "1.0.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Index"
      }
    },
    "/account_modifications/filter": {
      "get": {
        "parameters": [
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Size of page",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "type": "string"
            }
          },
          {
            "description": "Sort direction",
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "schema": {
              "default": "desc",
              "type": "string"
            }
          },
          {
            "description": "Type of modification",
            "in": "query",
            "name": "type_modifiy",
            "required": false,
            "schema": {
              "example": "ADD",
              "type": "string"
            }
          },
          {
            "description": "Type of target",
            "in": "query",
            "name": "type_target",
            "required": false,
            "schema": {
              "example": "USER",
              "type": "string"
            }
          },
          {
            "description": "Start range of date",
            "in": "query",
            "name": "start_range",
            "required": false,
            "schema": {
              "example": "2020-01-01",
              "type": "string"
            }
          },
          {
            "description": "End range of date",
            "in": "query",
            "name": "end_range",
            "required": false,
            "schema": {
              "example": "2020-01-01",
              "type": "string"
            }
          },
          {
            "description": "Keyword to search",
            "in": "query",
            "name": "keyword",
            "required": false,
            "schema": {
              "example": "keyword",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountModificationLogsFilterResponse"
                }
              }
            },
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid page or size"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Filter account modification logs",
        "tags": [
          "Account Modification Logs"
        ]
      }
    },
    "/admin/job/fetch/{platform_name}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "platform_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid page or size"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Admin fetch job",
        "tags": [
          "Job"
        ]
      }
    },
    "/admin/job/finish/{job_id}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Adminfinishjob"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid job id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Admin finish job",
        "tags": [
          "Job"
        ]
      }
    },
    "/admin/job/latest": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admingetlatestjobresponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid page or size"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Admin get latest job",
        "tags": [
          "Job"
        ]
      }
    },
    "/admin/job/progress/{job_id}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Adminprogressjob"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Adminprogressjobresponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid job id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Admin progress job",
        "tags": [
          "Job"
        ]
      }
    },
    "/admin/job/run/{job_id}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Admin fetch job",
        "tags": [
          "Job"
        ]
      }
    },
    "/admin/jobs": {
      "get": {
        "parameters": [
          {
            "description": "Status",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "example": "pending",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid page or size"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Admin get list jobs",
        "tags": [
          "Job"
        ]
      }
    },
    "/admin/jobs/progress": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Adminprogressjobs"
                },
                "type": "array"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdminprogressjobsReponse"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid job id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Admin progress jobs",
        "tags": [
          "Job"
        ]
      }
    },
    "/admin/platforms/page": {
      "get": {
        "parameters": [
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Size of page",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "type": "string"
            }
          },
          {
            "description": "Sort direction",
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "schema": {
              "default": "desc",
              "type": "string"
            }
          },
          {
            "description": "Platform status (running, available)",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "example": "running",
              "type": "string"
            }
          },
          {
            "description": "Platform type (cpu, gpu, tpu)",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "example": "qpu",
              "type": "string"
            }
          },
          {
            "description": "Search keyword by name",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "example": "qpu",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformPaginationforadmin"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid page or size"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get list platforms via pagination for admin",
        "tags": [
          "Platform"
        ]
      }
    },
    "/admin/platforms/register": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Adminregisterplatforms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid platform name"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Admin register platforms",
        "tags": [
          "Platform"
        ]
      }
    },
    "/admin/platforms/status/{platform_name}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "platform_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admingetplatformstatus"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid platform name"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Admin get platform status",
        "tags": [
          "Platform"
        ]
      }
    },
    "/admin/platforms/update": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlatformInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid platform name"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Admin update platforms",
        "tags": [
          "Platform"
        ]
      }
    },
    "/api/config": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get system config",
        "tags": [
          "Config"
        ]
      }
    },
    "/api/job": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJob"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateJobResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Missing required fields, Invalid payload, reach limit or something..."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create Job",
        "tags": [
          "Job"
        ]
      }
    },
    "/api/job/cancel": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Canceljob"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid job_id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Cancel Job",
        "tags": [
          "Job"
        ]
      }
    },
    "/api/job/limit/{job_id}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateJobLimit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid job_id or some unknown error"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update Job Limit",
        "tags": [
          "Job"
        ]
      }
    },
    "/api/job/reproduce/{job_id}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReproduceJob"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid job_id or some unknown error"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Reproduce Job",
        "tags": [
          "Job"
        ]
      }
    },
    "/api/job/rerun/{job_id}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RerunJob"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid job_id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Rerun Job",
        "tags": [
          "Job"
        ]
      }
    },
    "/api/job/result/{job_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobResult"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid job_id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Job Result",
        "tags": [
          "Job"
        ]
      }
    },
    "/api/job/status/{job_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Job Result",
        "tags": [
          "Job"
        ]
      }
    },
    "/api/job/{job_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Retrieve job history",
            "in": "query",
            "name": "retrieve_history",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid job_id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Job",
        "tags": [
          "Job"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateJob"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid job_id or some unknown error"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update Job",
        "tags": [
          "Job"
        ]
      }
    },
    "/api/jobs": {
      "get": {
        "parameters": [
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Size of page",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "type": "string"
            }
          },
          {
            "description": "Sort direction",
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "schema": {
              "default": "desc",
              "type": "string"
            }
          },
          {
            "description": "Token ID",
            "in": "query",
            "name": "token_id",
            "required": false,
            "schema": {
              "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
              "type": "string"
            }
          },
          {
            "description": "Token type",
            "in": "query",
            "name": "token_type",
            "required": false,
            "schema": {
              "example": "ERC20",
              "type": "string"
            }
          },
          {
            "description": "Search by job_id, platform_id, platform, token_id, token_type, job_name",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "example": "abc",
              "type": "string"
            }
          },
          {
            "description": "Exclude by job_id, platform_id, platform, token_id, token_type, job_name",
            "in": "query",
            "name": "exclude",
            "required": false,
            "schema": {
              "example": "abc",
              "type": "string"
            }
          },
          {
            "description": "Platform ID",
            "in": "query",
            "name": "platform_id",
            "required": false,
            "schema": {
              "example": "23",
              "type": "string"
            }
          },
          {
            "description": "Job status",
            "explode": true,
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "example": "pending",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Start time",
            "in": "query",
            "name": "start_time",
            "required": false,
            "schema": {
              "example": "2020-01-01T00:00:00Z",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "To time",
            "in": "query",
            "name": "to_time",
            "required": false,
            "schema": {
              "example": "2020-01-01T00:00:00Z",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "User ID",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Process ID",
            "in": "query",
            "name": "process_id",
            "required": false,
            "schema": {
              "example": "05cfb499-1789-41ac-8653-eb78039b76a2",
              "type": "integer"
            }
          },
          {
            "description": "Company ID",
            "in": "query",
            "name": "company_id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Run by admin",
            "in": "query",
            "name": "run_by_admin",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "Retrieve all jobs",
            "in": "query",
            "name": "retrieve_all",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Queryjobsresponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid page or size"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Query Jobs",
        "tags": [
          "Job"
        ]
      }
    },
    "/api/jobs/statistic": {
      "get": {
        "parameters": [
          {
            "description": "Start date",
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "example": "2020-01-01",
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "To date",
            "in": "query",
            "name": "to_date",
            "required": false,
            "schema": {
              "example": "2020-01-01",
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "User ID",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Company ID",
            "in": "query",
            "name": "company_id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Group by (platform/token/user/company)",
            "in": "query",
            "name": "group_by",
            "required": false,
            "schema": {
              "example": "platform",
              "type": "string"
            }
          },
          {
            "description": "Interval (year/month/week/day)",
            "in": "query",
            "name": "interval",
            "required": false,
            "schema": {
              "example": "day",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Getjobsstatisticresponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid page or size"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied or missing user_id"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Jobs Statistic",
        "tags": [
          "Job"
        ]
      }
    },
    "/api/platform": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Createaplatform"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateaplatformResponse"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create a platform",
        "tags": [
          "Platform"
        ]
      }
    },
    "/api/platform/history/{platform_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "platform_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Size of page",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "type": "string"
            }
          },
          {
            "description": "Sort direction",
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "schema": {
              "default": "desc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformHistoryPage"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid platform id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get platform history pagination",
        "tags": [
          "Platform"
        ]
      }
    },
    "/api/platform/perfs/{platform_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "platform_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Getplatformperfs"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid platform id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get platform perfs",
        "tags": [
          "Platform"
        ]
      }
    },
    "/api/platform/specs/{platform_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "platform_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Getplatformspecs"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid platform id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get platform specs",
        "tags": [
          "Platform"
        ]
      }
    },
    "/api/platform/status/{platform_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "platform_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Getplatformstatus"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid platform id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get platform status",
        "tags": [
          "Platform"
        ]
      }
    },
    "/api/platform/{object_type}/{platform_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "object_type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "platform_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Size of page",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "type": "string"
            }
          },
          {
            "description": "Sort direction",
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "schema": {
              "default": "desc",
              "type": "string"
            }
          },
          {
            "description": "Access permission",
            "in": "query",
            "name": "access",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "Search keyword by name",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "example": "qpu",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pagepermissiontoaccessplatform"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid object type"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Check permission to access platform via object",
        "tags": [
          "Platform"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "object_type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "platform_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectIds"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid object type"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add platform for object",
        "tags": [
          "Platform"
        ]
      }
    },
    "/api/platform/{platform_id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "platform_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid platform id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete platform",
        "tags": [
          "Platform"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "platform_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Updateplatform"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Nothing changed"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update platform",
        "tags": [
          "Platform"
        ]
      }
    },
    "/api/platform/{platform_name_or_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "platform_name_or_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformDetail"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get platform detail",
        "tags": [
          "Platform"
        ]
      }
    },
    "/api/platforms": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Platform"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List platforms",
        "tags": [
          "Platform"
        ]
      }
    },
    "/api/platforms/page": {
      "get": {
        "parameters": [
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Size of page",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "type": "string"
            }
          },
          {
            "description": "Sort direction",
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "schema": {
              "default": "desc",
              "type": "string"
            }
          },
          {
            "description": "Platform status (running, available)",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "example": "running",
              "type": "string"
            }
          },
          {
            "description": "Platform type (cpu, gpu, tpu)",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "example": "qpu",
              "type": "string"
            }
          },
          {
            "description": "Search keyword by name",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "example": "qpu",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformPagination"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid page or size"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get list platforms via pagination",
        "tags": [
          "Platform"
        ]
      }
    },
    "/api/public/platforms": {
      "get": {
        "parameters": [
          {
            "description": "Start date",
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "example": "2020-01-01 00:00:00",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "End date",
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "example": "2020-01-01 00:00:00",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "List of platform id",
            "explode": true,
            "in": "query",
            "name": "platform_id",
            "required": false,
            "schema": {
              "items": {
                "example": "5f9b9-b9b9b9b9b-9b9b9b-9b9b",
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicPlatformsResponse"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "summary": "List public platforms",
        "tags": [
          "Platform"
        ]
      }
    },
    "/api/status": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerStatus"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Cannot connect to database"
          }
        },
        "summary": "Check server and database status",
        "tags": [
          "Status"
        ]
      }
    },
    "/auth/account-validation": {
      "get": {
        "parameters": [
          {
            "description": "Code",
            "in": "query",
            "name": "code",
            "required": false,
            "schema": {
              "example": "code",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid code or Your code has expired"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "summary": "Validate register account",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/code/verify": {
      "get": {
        "parameters": [
          {
            "description": "Code",
            "in": "query",
            "name": "code",
            "required": false,
            "schema": {
              "example": "code",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid code or Your code has expired"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "summary": "Verify auth code",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/token/generate": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateToken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateTokenResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "unknown user"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Your account has been disabled"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Generate token",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/token/limit/{token_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "token_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PlatformPermission"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid or unknown token"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get token limit",
        "tags": [
          "Auth"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "token_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTokenLimit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid or unknown token"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update token limit",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/token/list": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ListtokenResponse"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid page or size"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List tokens",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/token/platform/{token_id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "token_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Platform ids to remove are empty or not a list"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Remove token platform",
        "tags": [
          "Auth"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "token_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PlatformPermission"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid token"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get token platform",
        "tags": [
          "Auth"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "token_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNestedTokenPlatform"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Platform ids to add are empty or not a list"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add token platform",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/token/revoke": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Revoketoken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Cannot revoke the current token at being used"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          },
          "424": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "SQLAlchemy exception"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Revoke token",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/token/{token_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "token_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKey"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid token id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Your account has been disabled"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get token detail",
        "tags": [
          "Auth"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "token_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateToken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid token id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Your account has been disabled"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update token",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/tokens": {
      "get": {
        "parameters": [
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Size of page",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "type": "string"
            }
          },
          {
            "description": "Sort direction",
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "schema": {
              "default": "desc",
              "type": "string"
            }
          },
          {
            "description": "Add this param in case admin wants to list tokens of another user",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "search query to filter by email or token label",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "example": "unknown",
              "type": "string"
            }
          },
          {
            "description": "Add this param in case admin wants to list tokens of another company",
            "in": "query",
            "name": "company_id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "valid",
            "in": "query",
            "name": "valid",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "Add this param in case admin wants to list all tokens of all users (example 'true')",
            "in": "query",
            "name": "retrieve_all",
            "required": false,
            "schema": {
              "example": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageTokensResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid page or size"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Page tokens",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/verify-captcha": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyCaptcha"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid captcha"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Captcha verify failed"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Verify captcha",
        "tags": [
          "Auth"
        ]
      }
    },
    "/companies": {
      "get": {
        "parameters": [
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Listcompaniespagination"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Listcompaniespaginationresponse"
                }
              }
            },
            "description": "List companies via pagination"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List companies via pagination",
        "tags": [
          "Company"
        ]
      }
    },
    "/company": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Addcompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Addcompanyresponse"
                }
              }
            },
            "description": "Company added"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Company name is already exist"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add company",
        "tags": [
          "Company"
        ]
      }
    },
    "/company/list": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Company"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List companies"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List companies",
        "tags": [
          "Company"
        ]
      }
    },
    "/company/platform/{company_id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "company_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Company platform removed"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown company id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Remove company platform",
        "tags": [
          "Company"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "company_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PlatformPermission"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Company platform"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown company id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get company platform",
        "tags": [
          "Company"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "company_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Addcompanyplatform"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Company platform added"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown company id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add company platform",
        "tags": [
          "Company"
        ]
      }
    },
    "/company/{company_id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "company_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Company deleted"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete company",
        "tags": [
          "Company"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "company_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            },
            "description": "Company info"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get company",
        "tags": [
          "Company"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "company_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Updatecompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Company updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Company name is already exist"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update company",
        "tags": [
          "Company"
        ]
      }
    },
    "/company/{company_id}/user/invite": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "company_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Inviteuserstocompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Users invited"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown company id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Invite users to company",
        "tags": [
          "Company"
        ]
      }
    },
    "/company/{company_id}/user/remove": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "company_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Removeusersfromcompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Users removed"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown company id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Remove users from company",
        "tags": [
          "Company"
        ]
      }
    },
    "/company_invitation/accept/{company_invitation_id}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "company_invitation_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "No invitation from company"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Accept company invitation",
        "tags": [
          "Company Invitation"
        ]
      }
    },
    "/company_invitation/deny/{company_invitation_id}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "company_invitation_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "No invitation from company"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deny company invitation",
        "tags": [
          "Company Invitation"
        ]
      }
    },
    "/company_invitation/{company_invitation_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "company_invitation_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyInvitation"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown company invitation"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get company invitation",
        "tags": [
          "Company Invitation"
        ]
      }
    },
    "/github/authorize": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubAuthorizeResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Failed to authorize with Github"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "summary": "Authorize with Github",
        "tags": [
          "Auth"
        ]
      }
    },
    "/login": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid email or password"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Account is not activated or deleted"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "summary": "Login",
        "tags": [
          "Auth"
        ]
      }
    },
    "/logout": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Logout",
        "tags": [
          "Auth"
        ]
      }
    },
    "/maintenance/history": {
      "get": {
        "parameters": [
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Size of page",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "type": "string"
            }
          },
          {
            "description": "Sort direction",
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "schema": {
              "default": "desc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemMaintenanceHistoryResponse"
                }
              }
            },
            "description": "System maintenance history"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid page or size"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get system maintenance history",
        "tags": [
          "System Maintenance"
        ]
      }
    },
    "/maintenance/start": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Startsystemmaintenance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "System maintenance started"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid duration (too large or already in maintenance mode)"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Start system maintenance",
        "tags": [
          "System Maintenance"
        ]
      }
    },
    "/maintenance/status": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/systemmaintenancestatus"
                }
              }
            },
            "description": "System maintenance status"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get system maintenance status",
        "tags": [
          "System Maintenance"
        ]
      }
    },
    "/maintenance/stop": {
      "post": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "System maintenance stopped"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Stop system maintenance",
        "tags": [
          "System Maintenance"
        ]
      }
    },
    "/metrics": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          }
        },
        "summary": "Metrics exporter",
        "tags": [
          "Metrics"
        ]
      }
    },
    "/news": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNews"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add news",
        "tags": [
          "News"
        ]
      }
    },
    "/news/list": {
      "get": {
        "parameters": [
          {
            "description": "Active news only",
            "in": "query",
            "name": "active_only",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/News"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List news",
        "tags": [
          "News"
        ]
      }
    },
    "/news/page": {
      "get": {
        "parameters": [
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Size of page",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "type": "string"
            }
          },
          {
            "description": "Sort direction",
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "schema": {
              "default": "desc",
              "type": "string"
            }
          },
          {
            "description": "Active news only",
            "in": "query",
            "name": "active_only",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "Search keyword",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "example": "news",
              "type": "string"
            }
          },
          {
            "description": "News type (normal, platform)",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "example": "normal",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageNewsResponse"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List news via pagination",
        "tags": [
          "News"
        ]
      }
    },
    "/news/{news_id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "news_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown news"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "News not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete news",
        "tags": [
          "News"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "news_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown news"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "News not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get news",
        "tags": [
          "News"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "news_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Updatenews"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Nothing to change"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "News not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update news",
        "tags": [
          "News"
        ]
      }
    },
    "/oauth/authorize": {
      "get": {
        "parameters": [
          {
            "description": "State",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Response type",
            "in": "query",
            "name": "response_type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Client id",
            "in": "query",
            "name": "client_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Redirect uri",
            "in": "query",
            "name": "redirect_uri",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Redirect"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "summary": "Authorize",
        "tags": [
          "OAuth"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "State",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Response type",
            "in": "query",
            "name": "response_type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Client id",
            "in": "query",
            "name": "client_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Redirect uri",
            "in": "query",
            "name": "redirect_uri",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Redirect"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "summary": "Authorize",
        "tags": [
          "OAuth"
        ]
      }
    },
    "/oauth/token": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Fetchtoken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fetchtokenresponse"
                }
              }
            },
            "description": "Successful operation"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "summary": "Fetch token",
        "tags": [
          "OAuth"
        ]
      }
    },
    "/platform-statistic/all": {
      "get": {
        "parameters": [
          {
            "description": "Start date",
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "example": "2020-01-01",
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "End date",
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "example": "2020-01-01",
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Platform ID",
            "explode": true,
            "in": "query",
            "name": "platform_id",
            "required": false,
            "schema": {
              "example": "platform_id",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Platform status (running, available)",
            "explode": true,
            "in": "query",
            "name": "platform_status",
            "required": false,
            "schema": {
              "example": "running",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformStatistic"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Admin get all statistics about platform availability",
        "tags": [
          "Platform Action Logs"
        ]
      }
    },
    "/platform-statistic/public": {
      "get": {
        "parameters": [
          {
            "description": "Start date",
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "example": "2020-01-01 00:00:00",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "End date",
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "example": "2020-01-01 00:00:00",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Platform ID",
            "explode": true,
            "in": "query",
            "name": "platform_id",
            "required": false,
            "schema": {
              "example": "platform_id",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformStatistic"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "get all public statistics about platform availability",
        "tags": [
          "Platform Action Logs"
        ]
      }
    },
    "/platform-statistic/user": {
      "get": {
        "parameters": [
          {
            "description": "Start date",
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "example": "2020-01-01 00:00:00",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "End date",
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "example": "2020-01-01 00:00:00",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Platform ID",
            "explode": true,
            "in": "query",
            "name": "platform_id",
            "required": false,
            "schema": {
              "example": "platform_id",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformStatistic"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "get all user statistics about platform availability",
        "tags": [
          "Platform Action Logs"
        ]
      }
    },
    "/roles": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful operation"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List roles",
        "tags": [
          "Role"
        ]
      }
    },
    "/signup": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Signup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponseSuccess"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Email or username already exists"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          },
          "424": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Failed to create user (SQLAlchemyError)"
          }
        },
        "summary": "Signup",
        "tags": [
          "User"
        ]
      }
    },
    "/system_notification": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Addsystemnotification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddsystemnotificationResponse"
                }
              }
            },
            "description": "System notification added"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid notification"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add system notification",
        "tags": [
          "System Notification"
        ]
      }
    },
    "/system_notification/list": {
      "get": {
        "parameters": [
          {
            "description": "Active only",
            "in": "query",
            "name": "active_only",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "Apply for",
            "in": "query",
            "name": "apply_for",
            "required": false,
            "schema": {
              "example": "WEBADMIN",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SystemNotification"
                  },
                  "type": "array"
                }
              }
            },
            "description": "System notifications"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid page or size"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List system notifications",
        "tags": [
          "System Notification"
        ]
      }
    },
    "/system_notification/page": {
      "get": {
        "parameters": [
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Size of page",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "type": "string"
            }
          },
          {
            "description": "Sort direction",
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "schema": {
              "default": "desc",
              "type": "string"
            }
          },
          {
            "description": "Active only",
            "in": "query",
            "name": "active_only",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "Search",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "example": "Notification title",
              "type": "string"
            }
          },
          {
            "description": "Apply for",
            "in": "query",
            "name": "apply_for",
            "required": false,
            "schema": {
              "example": "WEBADMIN",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageSystemNotificationResponse"
                }
              }
            },
            "description": "System notifications"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid page or size"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Page system notifications",
        "tags": [
          "System Notification"
        ]
      }
    },
    "/system_notification/{system_notification_id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "system_notification_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "System notification deleted"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete system notification",
        "tags": [
          "System Notification"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "system_notification_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Updatesystemnotification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "System notification updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid changes"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update system notification",
        "tags": [
          "System Notification"
        ]
      }
    },
    "/system_settings": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemSettings"
                }
              }
            },
            "description": "System settings"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get system settings",
        "tags": [
          "System Setting"
        ]
      },
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Updatesystemsettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "System settings updated"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid email notification"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update system settings",
        "tags": [
          "System Setting"
        ]
      }
    },
    "/tags": {
      "get": {
        "parameters": [
          {
            "description": "Tag Name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "example": "Tag Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Tag1"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission Denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Query all tags",
        "tags": [
          "Tag"
        ]
      },
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Createanewtag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Tag1"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission Denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create a new tag",
        "tags": [
          "Tag"
        ]
      }
    },
    "/tags/page": {
      "get": {
        "parameters": [
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Size of page",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "name",
              "type": "string"
            }
          },
          {
            "description": "Sort direction",
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "schema": {
              "default": "desc",
              "type": "string"
            }
          },
          {
            "description": "Filter by name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission Denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Paginate tags",
        "tags": [
          "Tag"
        ]
      }
    },
    "/tags/{object_type}/add": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "object_type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Addtagtoobject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission Denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add tag to object",
        "tags": [
          "Tag"
        ]
      }
    },
    "/tags/{object_type}/get": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "object_type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Tag Object ID",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "One or many tag ids to get object",
            "explode": true,
            "in": "query",
            "name": "tag_id",
            "required": false,
            "schema": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Object ID",
            "in": "query",
            "name": "object_id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Object Type",
            "in": "query",
            "name": "object_type",
            "required": false,
            "schema": {
              "example": "USER",
              "type": "string"
            }
          },
          {
            "description": "Is Deleted",
            "in": "query",
            "name": "is_deleted",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Tag Object Creation Date",
            "in": "query",
            "name": "created_date",
            "required": false,
            "schema": {
              "example": "2020-01-01 00:00:00",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Tag Object Last Update Date",
            "in": "query",
            "name": "last_update",
            "required": false,
            "schema": {
              "example": "2020-01-01 00:00:00",
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Meta"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission Denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get object by tags",
        "tags": [
          "Tag"
        ]
      }
    },
    "/tags/{object_type}/remove": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "object_type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Removetagfromobject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission Denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Remove tag from object",
        "tags": [
          "Tag"
        ]
      }
    },
    "/tags/{object_type}/{object_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "object_type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "object_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Tag1"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission Denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get tags by object",
        "tags": [
          "Tag"
        ]
      }
    },
    "/tags/{tag_id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "tag_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission Denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete tag by id",
        "tags": [
          "Tag"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "tag_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag1"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission Denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get tag by id",
        "tags": [
          "Tag"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "tag_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Updatenametagbyid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission Denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update tag by id",
        "tags": [
          "Tag"
        ]
      }
    },
    "/user": {
      "get": {
        "description": "ID field is required for Admin",
        "parameters": [
          {
            "description": "User ID",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "User not found or unknown user"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Return user information",
        "tags": [
          "User"
        ]
      },
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminCreateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Some error occurred"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "No permission to do something"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          },
          "424": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Failed to create user (SQLAlchemyError)"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Admin Create user",
        "tags": [
          "User"
        ]
      }
    },
    "/user/auth/reset_password": {
      "post": {
        "parameters": [
          {
            "description": "Auth code",
            "in": "query",
            "name": "code",
            "required": false,
            "schema": {
              "example": "*********",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordviacode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid password"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "summary": "Reset password via auth code",
        "tags": [
          "User"
        ]
      }
    },
    "/user/connection_logs": {
      "get": {
        "parameters": [
          {
            "description": "User id",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Start range",
            "in": "query",
            "name": "start_range",
            "required": false,
            "schema": {
              "example": "2020-01-01T00:00:00",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "End range",
            "in": "query",
            "name": "end_range",
            "required": false,
            "schema": {
              "example": "2020-01-01T00:00:00",
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get user connection logs",
        "tags": [
          "User"
        ]
      }
    },
    "/user/credit/{user_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserCredit"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown user"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get user credits",
        "tags": [
          "User"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserCredit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown user"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add user credits",
        "tags": [
          "User"
        ]
      }
    },
    "/user/credit_transaction/{user_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Size of page",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "type": "string"
            }
          },
          {
            "description": "Sort direction",
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "schema": {
              "default": "desc",
              "type": "string"
            }
          },
          {
            "description": "User id",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageUserCreditTransaction"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown user"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get user credit transaction",
        "tags": [
          "User"
        ]
      }
    },
    "/user/disable/{user_id}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown user"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Disable user",
        "tags": [
          "User"
        ]
      }
    },
    "/user/disconnect/{user_id}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown user"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Disconnect user",
        "tags": [
          "User"
        ]
      }
    },
    "/user/enable/{user_id}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown user"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Enable user",
        "tags": [
          "User"
        ]
      }
    },
    "/user/forgot_password": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Email does not exist"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Send password reset email to user",
        "tags": [
          "User"
        ]
      }
    },
    "/user/independent": {
      "get": {
        "parameters": [
          {
            "description": "Company ID",
            "in": "query",
            "name": "company_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid company_id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Return all non-company users",
        "tags": [
          "User"
        ]
      }
    },
    "/user/leave_company": {
      "post": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Leave company",
        "tags": [
          "User"
        ]
      }
    },
    "/user/limit/{user_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PlatformPermission"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get user limit",
        "tags": [
          "User"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Updateuserlimit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update user limit",
        "tags": [
          "User"
        ]
      }
    },
    "/user/list": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List all users",
        "tags": [
          "User"
        ]
      }
    },
    "/user/notification/count": {
      "get": {
        "parameters": [
          {
            "description": "User notification read status",
            "in": "query",
            "name": "read",
            "required": false,
            "schema": {
              "example": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown notification"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Count user notification",
        "tags": [
          "User Notification"
        ]
      }
    },
    "/user/notification/mark_as_read": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkNotificationAsRead"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid notification id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Mark user notification as read",
        "tags": [
          "User Notification"
        ]
      }
    },
    "/user/notification/mark_as_unread": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkNotificationAsUnRead"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid notification id"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Mark user notification as unread",
        "tags": [
          "User Notification"
        ]
      }
    },
    "/user/notification/{notification_id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "notification_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown notification"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete user notification",
        "tags": [
          "User Notification"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "notification_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotification"
                }
              }
            },
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown notification"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get user notification",
        "tags": [
          "User Notification"
        ]
      }
    },
    "/user/notifications": {
      "get": {
        "parameters": [
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Size of page",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "type": "string"
            }
          },
          {
            "description": "Sort direction",
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "schema": {
              "default": "desc",
              "type": "string"
            }
          },
          {
            "description": "Read status",
            "in": "query",
            "name": "read",
            "required": false,
            "schema": {
              "example": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotificationListResponse"
                }
              }
            },
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid page or size"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List user notifications",
        "tags": [
          "User Notification"
        ]
      }
    },
    "/user/paging_logs": {
      "get": {
        "parameters": [
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Size of page",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "type": "string"
            }
          },
          {
            "description": "Sort direction",
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "schema": {
              "default": "desc",
              "type": "string"
            }
          },
          {
            "description": "User id",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Start range",
            "in": "query",
            "name": "start_range",
            "required": false,
            "schema": {
              "example": "2020-01-01T00:00:00",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "End range",
            "in": "query",
            "name": "end_range",
            "required": false,
            "schema": {
              "example": "2020-01-01T00:00:00",
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagingUserConnectionLogs"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Paging user connection logs",
        "tags": [
          "User"
        ]
      }
    },
    "/user/platform/page": {
      "get": {
        "parameters": [
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Size of page",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "type": "string"
            }
          },
          {
            "description": "Sort direction",
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "schema": {
              "default": "desc",
              "type": "string"
            }
          },
          {
            "description": "Status ('active'|'inactive')",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "example": "active",
              "type": "string"
            }
          },
          {
            "description": "Type ('que'|'simulator')",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "example": "ide",
              "type": "string"
            }
          },
          {
            "description": "Search",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "example": "john",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagePlatform"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid page or size"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List all platform via pagination",
        "tags": [
          "User"
        ]
      }
    },
    "/user/platform/{user_id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Platform ids to add are empty or not a list"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Remove user platform",
        "tags": [
          "User"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PlatformPermission"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown user"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get user platform",
        "tags": [
          "User"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNestedUserPlatform"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Platform ids to add are empty or not a list"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add user platform",
        "tags": [
          "User"
        ]
      }
    },
    "/user/resend_verification_email/{user_id}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "User has verified email"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "424": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Failed to send email (SMTPException)"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Resend verification email",
        "tags": [
          "User"
        ]
      }
    },
    "/user/reset_password": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid password"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Reset password",
        "tags": [
          "User"
        ]
      }
    },
    "/user/survey/{user_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSurvey"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get user survey",
        "tags": [
          "User"
        ]
      }
    },
    "/user/unlock-login/{user_id}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "424": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "SQLAlchemy exception"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Unlock login",
        "tags": [
          "User"
        ]
      }
    },
    "/user/validate-by-admin/{code}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminValidateuser"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Validate user by admin",
        "tags": [
          "User"
        ]
      }
    },
    "/user/validate/{user_id}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Validate user",
        "tags": [
          "User"
        ]
      }
    },
    "/user/{user_id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Unknown user"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete user",
        "tags": [
          "User"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Nothing changed"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update user information",
        "tags": [
          "User"
        ]
      }
    },
    "/users": {
      "get": {
        "parameters": [
          {
            "description": "Current page",
            "in": "query",
            "name": "current_page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Size of page",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "type": "string"
            }
          },
          {
            "description": "Sort direction",
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "schema": {
              "default": "desc",
              "type": "string"
            }
          },
          {
            "description": "Filter by email",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "example": "john@doe.com",
              "type": "string"
            }
          },
          {
            "description": "Filter by company ID",
            "in": "query",
            "name": "company_id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Returns a list of all logged in users",
            "in": "query",
            "name": "logged_in",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "Returns a list of all users that have not validated their email",
            "in": "query",
            "name": "pending_validate",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "Returns a list of all users that have validated their email",
            "in": "query",
            "name": "email_verified",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "Returns a list of all users that have been blocked from logging in",
            "in": "query",
            "name": "block_login",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "Returns a list of all users that are monitoring users",
            "in": "query",
            "name": "monitoring_user",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "Returns a list of all users that are system admins",
            "in": "query",
            "name": "is_system_admin",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "Filter by tag IDs",
            "explode": true,
            "in": "query",
            "name": "tag_id",
            "required": false,
            "schema": {
              "example": [
                1,
                2
              ],
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryUsersResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Invalid page or size"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List all users via pagination",
        "tags": [
          "User"
        ]
      }
    },
    "/users/export": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Export users",
        "tags": [
          "User"
        ]
      }
    },
    "/users/survey/statistic": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSurveyStatistic"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Permission denied"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get user survey statistic",
        "tags": [
          "User"
        ]
      }
    }
  },
  "tags": [
    {
      "description": "APIs related to user authentication and access token",
      "name": "Auth"
    },
    {
      "description": "Operations about user",
      "name": "User"
    },
    {
      "description": "Operations about job",
      "name": "Job"
    },
    {
      "description": "Operations about platform",
      "name": "Platform"
    },
    {
      "description": "Metrics exporter (maybe)",
      "name": "Metrics"
    },
    {
      "description": "Operations about user notification",
      "name": "User Notification"
    },
    {
      "description": "Operations about account modification logs",
      "name": "Account Modification Logs"
    },
    {
      "description": "Role management",
      "name": "Role"
    },
    {
      "description": "OAuth2.0 authentication",
      "name": "OAuth"
    },
    {
      "description": "Operations about system config",
      "name": "Config"
    },
    {
      "description": "Operations about news",
      "name": "News"
    },
    {
      "description": "Check server and database status",
      "name": "Status"
    },
    {
      "description": "Operations about system maintenance",
      "name": "System Maintenance"
    },
    {
      "description": "Operations about system notification",
      "name": "System Notification"
    },
    {
      "description": "Operations about system setting",
      "name": "System Setting"
    },
    {
      "description": "Operations about platform",
      "name": "Platform Action Logs"
    },
    {
      "description": "Operations about company",
      "name": "Company"
    },
    {
      "description": "Operations about company invitation",
      "name": "Company Invitation"
    },
    {
      "description": "Operations about tag",
      "name": "Tag"
    }
  ]
}
